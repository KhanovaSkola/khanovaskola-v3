settings:
	number_of_shards: 1
	number_of_replicas: 0
	analysis:
		analyzer:
			cs_icu_analyzer:
				type: custom
				tokenizer: whitespace
				char_filter: [cs_delim, cs_math, cs_math_multiplication, cs_order, remove_doubles, cs_typo]
				filter: [cs_stop, icu_folding, letters, cs_stop, cs_stem, synonyms, remove_duplicities]
			synonyms_compiler:
				type: custom
				tokenizer: whitespace
				char_filter: [cs_delim, cs_math, cs_math_multiplication, cs_order, remove_doubles, cs_typo]
				filter: [cs_stop, icu_folding, letters, cs_stop, cs_stem]
			cs_icu_analyzer_suggest:
				type: custom
				tokenizer: standard
				filter: []
			youtube_id:
				type: pattern
				pattern: \s+
				lowercase: false
		char_filter:
			cs_delim: # this could be replaced by custom tokenizer
				type: mapping
				mappings:
					- ": => \\u0020" # space
					- "- => \\u0020"
			cs_math:
				type: mapping
				mappings:
					- "+ => \\u0020plus\\u0020" # space
					- "* => \\u0020krát\\u0020"
					- "= => \\u0020rovná se\\u0020"
					# - minus, dash
					# / deleno, nebo
			cs_math_multiplication:
				type: pattern_replace
				pattern: "(\\d)\\s*(x|X)"
				replacement: "$1 krát " # intentional appended space
			remove_doubles: # nn => n etc.
				type: pattern_replace
				pattern: "([a-zA-Z])\\1+"
				replacement: "$1"
			cs_order:
				type: mapping
				mappings:
					- "1. => první" # první světová válka
					- "2. => druhý" # druhá kapitola
					- "3. => třetý"
					- "4. => čtvrtý"
					- "5. => pátý"
					- "6. => šestý"
					- "7. => sedmý"
					- "8. => osmý"
					- "9. => devátý"
			cs_typo: # should be applied last
				type: mapping
				mappings:
					- "z => s" # gymnazium vs gymnasium, but also ztrata vs strata
					- "Z => S"
					- "ž => š"
					- "Ž => Š"
					- "i => y" # glykolyza vs glikoliza
					- "I => Y" # glykolyza vs glikoliza
					- "í => ý" # glykolyza vs glikoliza
					- "c => k" # kalvinův vs calvinův
					- "C => K"
					- "č => k"
					- "Č => K"
					- "ie => ě" # hey, do not judge

		filter:
			letters:
				type: pattern_replace
				pattern: '[^A-Za-z0-9]'
				replacement: ''
			cs_stem:
				type: stemmer
				name: czech
			cs_stop:
				type: stop
				stopwords: ['a', 's', 'k', 'o', 'i', 'u', 'v', 'z', 'cz', 'tímto', 'tamtím', 'budeš', 'budem', 'budou', 'byli', 'jseš', 'můj', 'ta', 'tomto', 'tohle', 'tuto', 'tyto', 'jej', 'zda', 'máte', 'tato', 'kam', 'tohoto', 'kteří', 'mi', 'nám', 'tom', 'tomuto', 'mít', 'nic', 'proto', 'kterou', 'byla', 'toho', 'protože', 'asi', 'ho', 'naši', 're', 'což', 'tím', 'takže', 'svých', 'její', 'svými', 'jste', 'aj', 'tu', 'tedy', 'teto', 'bylo', 'ke', 'pravé', 'ji', 'nejsou', 'či', 'ty', 'pak', 'vám', 'ani', 'když', 'však', 'neg', 'jsem', 'tento', 'aby', 'jsme', 'pta', 'jejich', 'byl', 'ještě', 'až', 'také', 'pouze', 'vaše', 'nás', 'tipy', 'pokud', 'může', 'jeho', 'své', 'jiné', 'zprávy', 'vás', 'jen', 'podle', 'zde', 'už', 'být', 'více', 'bude', 'již', 'než', 'by', 'co', 'nebo', 'ten', 'tak', 'má', 'při', 'od', 'po', 'jsou', 'ale', 'si', 'se', 've', 'to', 'jako', 'za', 'zpět', 'ze', 'do', 'pro', 'je', 'na', 'atd.', 'atp.', 'jakmile', 'přičemž', 'já', 'on', 'ona', 'ono', 'oni', 'ony', 'my', 'vy', 'jí', 'ji', 'mě', 'mne', 'jemu', 'tomu', 'těm', 'těmu', 'němu', 'němuž', 'jehož', 'jíž', 'jelikož', 'jež', 'jakož', 'načež', 'právě', 'že', 'jak']
			cs_icu_collation:
				type: icu_collation
				language: cs
			remove_duplicities:
				type: unique
				only_on_same_position: true
			synonyms:
				type: synonym
				synonyms: # Loaded from synonyms.compiled.neon

mappings:
	content:
		index_analyzer: cs_icu_analyzer
		search_analyzer: cs_icu_analyzer
		properties:
			title:
				type: string
				store: true
				boost: 5
			suggest: # same as title
				type: string
				index_analyzer: cs_icu_analyzer_suggest
				search_analyzer: cs_icu_analyzer_suggest
			bucket:
				type: string
				index_analyzer: simple
				search_analyzer: simple
			description:
				type: string
				store: true
				boost: 4
			subtitles:
				type: string
				store: true
				index_options: offsets
			youtube_id:
				type: string
				index_analyzer: youtube_id
				search_analyzer: youtube_id
			block_count:
				type: integer
			schema_count:
				type: integer
			position:
				type: integer
	block:
		index_analyzer: cs_icu_analyzer
		search_analyzer: cs_icu_analyzer
		properties:
			title:
				type: string
				store: true
				boost: 5
			description:
				type: string
				store: true
				boost: 4
			from_old_web:
				type: integer # intentionally not bool, used in scoring

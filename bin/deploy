#!/usr/bin/env php
<?php

define('SERVER_DIR', '/srv/sites/dev.clevents.cz');

require __DIR__ . '/../vendor/autoload.php';
deployer();

task('prod_server', function() {
    connect('dev.clevents.cz', 'mikulas', rsa('~/.ssh/id_rsa'));
	//migrations('status');die;
    // up to date commands first

    uploadFromRoot('bin');

    $vendorChanged = !lockFileSame();
    if ($vendorChanged)
    {
        // we need something to run commands from
        uploadFromRoot('vendor', '__vendor');
        uploadFromRoot('composer.lock');
    }

	uploadFromRoot('migrations');

    uploadFromRoot('www/_maintenance.php', NULL, TRUE);
    uploadFromRoot('www/index.php', NULL, TRUE);

    // uses __vendor if available
	writeln("\n<fg=blue>Starting maintenance mode</fg=blue>");
    console('maintenance', 'start');

    ignore(['*/config.local.neon']);
    uploadFromRoot('app');

    ignore(['*/index.php', '*/_maintenance.php']);
    uploadFromRoot('www');
    if ($vendorChanged)
    {
        run('rm -rf', SERVER_DIR . '/vendor');
        run('mv', SERVER_DIR . '/__vendor', SERVER_DIR . '/vendor');
    }

    // mostly for first run
	writeln('Creating log, sessions and cache dirs');
    console('log', 'create');
    console('sessions', 'create');
    console('cache', 'create');

	writeln('Running migrations');
	migrations('migrate');

	writeln('Purging cache');
	console('cache', 'purge');

    // TODO check if config local is set, if not, do not stop maintenance mode

	writeln("<fg=blue>Stopping maintenance mode</fg=blue>\n");
	console('maintenance', 'stop');

	$time = date('r');

	writeln('Tagging head as deploy/production');
	silent();
    runLocally("git tag -f -a deploy/production -m 'Deployed at $time'");
	silent(FALSE);
});

task('prod', 'Deploy on production.', ['prod_server']);

start();



function lockFileSame()
{
	silent();
    $remote = run('md5sum', SERVER_DIR . '/composer.lock');
    $localPath = escapeshellarg(__DIR__ . '/../composer.lock');
    $local = runLocally("cat $localPath | md5");
	silent(FALSE);

    return substr($remote, 0, 32) === substr($local, 0, 32);
}

function uploadFromRoot($dir, $target = NULL, $silent = FALSE)
{
    if ($target === NULL)
    {
        $target = $dir;
	    if (!$silent) writeln("Uploading <info>$dir</info>");
    }
	else
	{
		if (!$silent) writeln("Uploading <info>$dir</info> to <info>$target</info>");
	}
	silent();
    upload(__DIR__ . "/../$dir", SERVER_DIR . "/$target");
	silent(FALSE);
}

function console(/* ... */)
{
	silent();
    $args = func_get_args();
    array_unshift($args, SERVER_DIR . '/bin/console');
    array_unshift($args, 'php');
    $res = call_user_func_array('run', $args);
	silent(FALSE);
	return $res;
}

function migrations($command)
{
	silent();
	$res = call_user_func('run', escapeshellarg(SERVER_DIR . '/bin/migration') . ' ' . $command);
	silent(FALSE);
	return $res;
}

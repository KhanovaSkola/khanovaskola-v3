#!/usr/bin/env php
<?php

use App\Factories\LogFactory;
use App\Services\Queue;
use App\Tasks\Task;
use Monolog\Logger;
use Nette\DI\Container;

/** @var Container $container */
$container = require __DIR__ . '/../app/bootstrap.php';

/** @var Queue $queue */
$queue = $container->getService('queue');

/** @var Logger $log */
LogFactory::$name = LogFactory::WORKER;
$log = $container->getService('log');

while (TRUE)
{
	$queue->watch(function(Task $task, callable $next) use ($container, $queue, $log) {
		try
		{
			if (!$task->run($container))
			{
				$class = get_class($task);
				$log->addNotice("Task $class failed", ['task' => $task]);
			}
			$next();
		}
		catch (Exception $e)
		{
			$queue->buryTask($task);
			$class = get_class($task);
			$log->addWarning("Task $class throwed exception and has been burried", ['task' => $task, 'exception' => $e]);
		}
	});
}
